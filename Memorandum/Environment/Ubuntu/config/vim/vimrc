" All system-wide defaults are set in $VIMRUNTIME/debian.vim and sourced by

" the call to :runtime you can find below.  If you wish to change any of those settings, you should do it in this file (/etc/vim/vimrc), since debian.vim
" will be overwritten everytime an upgrade of the vim packages is performed.
" It is recommended to make changes after sourcing debian.vim since it alters the value of the 'compatible' option.

runtime! debian.vim

" Vim will load $VIMRUNTIME/defaults.vim if the user does not have a vimrc.
" This happens after /etc/vim/vimrc(.local) are loaded, so it will override
" any settings in these files.
" If you don't want that to happen, uncomment the below line to prevent
" defaults.vim from being loaded.
" let g:skip_defaults_vim = 1

" Uncomment the next line to make Vim more Vi-compatible
" NOTE: debian.vim sets 'nocompatible'.  Setting 'compatible' changes numerous
" options, so any other options should be set AFTER setting 'compatible'.
"set compatible

" Vim5 and later versions support syntax highlighting. Uncommenting the next
" line enables syntax highlighting by default.
if has("syntax")
  syntax on
endif

" If using a dark background within the editing area and syntax highlighting
" turn on this option as well
"set background=dark

" Uncomment the following to have Vim jump to the last position when
" reopening a file
"au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif

" Uncomment the following to have Vim load indentation rules and plugins
" according to the detected filetype.
"filetype plugin indent on

" The following are commented out as they cause vim to behave a lot
" differently from regular Vi. They are highly recommended though.
"set showcmd		" Show (partial) command in status line.
"set showmatch		" Show matching brackets.
"set ignorecase		" Do case insensitive matching
"set smartcase		" Do smart case matching
"set incsearch		" Incremental search
"set autowrite		" Automatically save before commands like :next and :make
"set hidden		" Hide buffers when they are abandoned
"set mouse=a		" Enable mouse usage (all modes)

" Source a global configuration file if available
if filereadable("/etc/vim/vimrc.local")
  source /etc/vim/vimrc.local
endif

call plug#begin("/home/echo/.vim/plugged")
Plug 'morhetz/gruvbox'
Plug 'joshdick/onedark.vim'
Plug 'vim-airline/vim-airline'
Plug 'sheerun/vim-polyglot'
Plug 'preservim/nerdcommenter'
Plug 'mhinz/vim-startify'
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
Plug 'scrooloose/nerdtree'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'tiagofumo/vim-nerdtree-syntax-highlight'
Plug 'iamcco/mathjax-support-for-mkdp'
Plug 'iamcco/markdown-preview.nvim', { 'do': { -> mkdp#util#install() }, 'for': ['markdown', 'vim-plug']}

call plug#end()

" echo general config
set clipboard=unnamedplus
let g:mapleader = "\<Space>"
nnoremap <S-n> ^
nnoremap <S-m> $
nnoremap f w
nnoremap w b
nnoremap e <C-u>

nnoremap c <C-d>
inoremap jk <ESC>
vnoremap yy "+yy
nnoremap yy "+yy

nnoremap <leader>w :w<CR>
nnoremap <leader>s :wq<CR>
nnoremap <leader>q :q!<CR>
nnoremap <S-u> <C-r>
nnoremap <leader>a ggVG"
nnoremap <S-j> gt
nnoremap <S-k> gT
nnoremap <S-e> <C-e>
nnoremap <S-c> <C-y>
nnoremap df daw

nnoremap <leader>n :vsp<CR>
nnoremap <leader>m :sp<CR>

nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

inoremap <C-h> <left>
inoremap <C-j> <up>
inoremap <C-k> <down>
inoremap <C-l> <right>

nnoremap <leader><S-w> :wall<CR>
nnoremap <leader><S-q> :qall<CR>

nnoremap <CR> o<ESC>


" vim config
set nocompatible
set number
set cursorline
set nowrap
set scrolloff=8
set ruler
"set colorcolumn=80

set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab
set smarttab
set autoindent

set sm!
set showmatch
set hlsearch
set incsearch
set ignorecase
set smartcase

set novisualbell
set showcmd
set wildmenu
set wildmode=list:longest,full

set list
set listchars=tab:>·,trail:·

filetype on
set encoding=utf-8
set fileencodings=ucs-bom,utf-8,utf-16,gbk,gi5,gb18030,latin1
set confirm

set history=1000
set undolevels=1000
set nobackup
set nowritebackup
set noswapfile
set autoread

syntax on
set t_Co=256
"colorscheme onedark
set background=dark
colorscheme gruvbox

nnoremap <leader>t :tabnew<CR>
nnoremap <leader>e :e<Space>
nnoremap <leader>f :Files<CR>
nnoremap <leader>g :GFiles<CR>
nnoremap <leader>b :Buffers<CR>
nnoremap <S-f> :Lines<CR>
nmap <silent> <leader>z <Plug>MarkdownPreview
nmap <silent> <leader>x <Plug>MarkdownPreviewStop

" vim-startiy
let g:startify_files_number = 10
let g:startify_lists = [
            \ {'type':'files','header':['    Recent Files']},
            \ {'type':'bookmarks','header':['    Bookmarks']}
            \]
let g:startify_bookmarks = [
            \ {'z': '~/.zshrc'},
            \ {'v': '~/.vimrc'},
            \ {'t': '~/.todo'},
            \ {'n': '~/Documents/gitlab/notebook'}
            \]

let g:mkdp_browser='microsoft-edge'
let g:mkdp_auto_close=1

" NERDTree
nmap <C-t> :NERDTreeToggle<CR>
imap <C-t> <ESC>:NERDTreeToggle<CR>

autocmd BufEnter * if tabpagenr('$') == 1 && winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | quit | endif
